name: Build and Push Docker Images

on: workflow_dispatch

env:
  LOCAL_IMAGE_FRONTEND: localhost:5000/lms-frontend-webpack:latest
  LOCAL_IMAGE_DJANGO: localhost:5000/lms-backend-django:latest
  REMOTE_IMAGE_BACKEND_DJANGO: 297302290031.dkr.ecr.eu-central-1.amazonaws.com/lms-uwsgi:${{ github.run_number }}
  REMOTE_IMAGE_BACKEND_NGINX: 297302290031.dkr.ecr.eu-central-1.amazonaws.com/lms-nginx:${{ github.run_number }}

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      # https://docs.docker.com/registry/deploying/#run-a-local-registry
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: lms-backend

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host

      - name: Build Cache - Frontend
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-webpack-cache
          key: ${{ runner.os }}-webpack-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-webpack-buildx

      - name: Build Cache - Django
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-django-cache
          key: ${{ runner.os }}-django-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-django-buildx

      - name: Checkout frontend repo
        uses: actions/checkout@v2
        with:
          repository: cscenter/site-frontend
          ssh-key: ${{ secrets.FRONTEND_DEPLOY_KEY }}
          path: lms-frontend

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Debug
        run: |
          docker images
          docker buildx ls

      - name: Build frontend image
        uses: docker/build-push-action@v2
        with:
          context: ./lms-frontend
          file: ./lms-frontend/Dockerfile
          push: true
          load: false
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            WEBPACK_ENVIRONMENT=prod
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
          tags: ${{ env.LOCAL_IMAGE_FRONTEND }}
          cache-from: type=local,src=/tmp/.buildx-webpack-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-webpack-cache-new

      - name: Debug
        run: |
          docker images
          docker buildx ls

      - name: Build image with django dependencies
        uses: docker/build-push-action@v2
        with:
          context: ./lms-backend/
          file: ./lms-backend/docker-files/app/common.Dockerfile
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ env.LOCAL_IMAGE_DJANGO }}
          cache-from: type=local,src=/tmp/.buildx-django-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-django-cache-new

      - name: Build final backend app image
        uses: docker/build-push-action@v2
        with:
          context: ./lms-backend/
          file: ./lms-backend/docker-files/app/Dockerfile
          push: true
          load: false
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            WEBPACK_ENVIRONMENT=prod
            DJANGO_STATIC_ROOT=/var/www/static/
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            FRONTEND_IMAGE=${{ env.LOCAL_IMAGE_FRONTEND }}
            BASE_IMAGE=${{ env.LOCAL_IMAGE_DJANGO }}
          tags: ${{ env.REMOTE_IMAGE_BACKEND_DJANGO }}

      - name: Build backend nginx image
        uses: docker/build-push-action@v2
        with:
          context: ./lms-backend/docker-files/nginx/
          file: ./lms-backend/docker-files/nginx/Dockerfile
          push: true
          load: false
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ env.REMOTE_IMAGE_BACKEND_NGINX }}

      - name: Debug
        run: docker images

      # https://github.com/docker/build-push-action/issues/252
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-webpack-cache /tmp/.buildx-django-cache
          mv /tmp/.buildx-webpack-cache-new /tmp/.buildx-webpack-cache
          mv /tmp/.buildx-django-cache-new /tmp/.buildx-django-cache
