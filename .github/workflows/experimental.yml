name: Run tests inside docker

# on: workflow_dispatch

on:
  push:
    branches:
      - master

env:
  LOCAL_IMAGE_DJANGO_PROD: localhost:5000/lms-backend-django:latest
  LOCAL_IMAGE_DJANGO_DEV: localhost:5000/lms-backend-django-dev:latest

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      # https://docs.docker.com/registry/deploying/#run-a-local-registry
      registry:
        image: registry:2
        ports:
          - 5000:5000
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: csc
          POSTGRES_PASSWORD: FooBar
          POSTGRES_DB: cscdb
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      redis:
        # 5.0.6 on AWS
        image: redis:5.0.14
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 6379 on service container to the host
          - 6379:6379

    env:
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      WEBPACK_ENVIRONMENT: prod
      WEBPACK_ASSETS_ROOT: ./site-frontend/assets/

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: lms-backend

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host

      - name: Restore Django Prod Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-django-cache
          key: ${{ runner.os }}-django-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-django-buildx

      - name: Restore Django Dev Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-django-dev-cache
          key: ${{ runner.os }}-django-dev-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-django-dev-buildx

      - name: Build image with production dependencies
        uses: docker/build-push-action@v2
        with:
          context: ./lms-backend/
          file: ./lms-backend/docker-files/app/common.Dockerfile
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ env.LOCAL_IMAGE_DJANGO_PROD }}
          cache-from: type=local,src=/tmp/.buildx-django-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-django-cache-new

#      - name: Build image with dev dependencies
#        uses: docker/build-push-action@v2
#        with:
#          context: ./lms-backend/
#          file: ./lms-backend/docker-files/app/dev.Dockerfile
#          push: true
#          builder: ${{ steps.buildx.outputs.name }}
#          build-args: |
#            BASE_IMAGE=${{ env.LOCAL_IMAGE_DJANGO_PROD }}
#          tags: ${{ env.LOCAL_IMAGE_DJANGO_DEV }}
#          cache-to: type=local,mode=max,dest=/tmp/.buildx-django-dev-cache-new

      - name: Debug
        run: |
          docker images
          ls /tmp/.buildx-django-cache-new

      # https://github.com/docker/build-push-action/issues/252
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-django-cache .buildx-django-dev-cache-new
          mv /tmp/.buildx-django-cache-new /tmp/.buildx-django-cache
          mv /tmp/.buildx-django-dev-cache-new /tmp/.buildx-django-dev-cache

